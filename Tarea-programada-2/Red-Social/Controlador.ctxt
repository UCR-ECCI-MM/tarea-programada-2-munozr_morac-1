#BlueJ class context
comment0.target=Controlador
comment0.text=\r\n\ Esta\ clase\ se\ encarga\ de\ manejar\ la\ funcionalidad\ general\ del\ programa.\r\n\r\n\ @author\ Kyara\ Vannesa\ Mu\u00F1oz\ Ram\u00EDrez\ (C15380)\r\n\ @author\ Jose\ Pablo\ Mora\ Cubillo\ (B75044)\r\n
comment1.params=
comment1.target=Controlador()
comment1.text=\r\n\ Constructor\ de\ la\ clase\ Controlador.\r\n
comment10.params=
comment10.target=void\ leerArchivo()
comment10.text=\r\n\ Lee\ el\ archivo\ elegido\ por\ el\ usuario.\r\n
comment11.params=
comment11.target=void\ escribirArchivo()
comment11.text=\r\n\ Llama\ al\ toStringArchivo\ de\ la\ clase\ Lista\ para\ escribirlo\ en\ el\ debido\ formato\ del\ archivo.\r\n
comment12.params=args
comment12.target=void\ main(java.lang.String[])
comment12.text=\r\n\ M\u00E9todo\ principal\ que\ llama\ a\ inciar\ el\ juego.\r\n\ \r\n\ @param\ parametros\ vector\ de\ Strings\ con\ valores\ de\ entrada\ del\ main.\r\n
comment2.params=
comment2.target=void\ iniciar()
comment2.text=\r\n\ Inicia\ el\ programa,\ llama\ a\ seleccionar\ un\ arhcivo\ para\ abrir\ y\ despliega\ un\ men\u00FA\ con\ las\ acciones\ que\ puede\ realizar\ el\ usuario.\r\n
comment3.params=
comment3.target=void\ agregarPersona()
comment3.text=\r\n\ Pide\ los\ datos\ al\ usuario\ para\ crear\ una\ nueva\ persona\ y\ llamar\ al\ m\u00E9todo\ de\ agregarPersona\ de\ Lista\ para\ agregarla\ a\ la\ lista.\r\n\ Eval\u00FAa\ si\ ese\ nombre\ ya\ est\u00E1\ registrado\ como\ una\ persona\ en\ la\ lista.\r\n
comment4.params=
comment4.target=void\ registrarAmistad()
comment4.text=\r\n\ Pide\ al\ usuario\ tanto\ el\ nombre\ de\ la\ persona\ a\ la\ que\ se\ le\ quiere\ agregar\ un\ amigo,\ como\ el\ nombre\ del\ amigo\ a\ agregar\ y\ llama\ \r\n\ al\ m\u00E9todo\ agregarAmigo\ de\ la\ clase\ Persona\ para\ agregarlo.\ Eval\u00FAa\ si\ las\ personas\ de\ ambos\ nombres\ est\u00E1n\ en\ la\ lista,\ si\ ya\ se\ \r\n\ hab\u00EDan\ registrado\ como\ amigos,\ y\ si\ el\ nombre\ del\ amigo\ no\ es\ el\ mismo\ que\ el\ de\ la\ persona.\r\n
comment5.params=
comment5.target=void\ borrarAmistad()
comment5.text=\r\n\ Pide\ al\ usuario\ tanto\ el\ nombre\ de\ la\ persona\ a\ la\ que\ se\ le\ quiere\ borrar\ un\ amigo,\ como\ el\ nombre\ del\ amigo\ a\ borrar\ y\ llama\ \r\n\ al\ m\u00E9todo\ eliminarAmigo\ de\ la\ clase\ Persona\ para\ borrarlo.\ \r\n\ Eval\u00FAa\ si\ las\ personas\ de\ ambos\ nombres\ no\ est\u00E1n\ en\ la\ lista\ y\ si\ no\ se\ hab\u00EDan\ registrado\ como\ amigos\ antes.\r\n
comment6.params=
comment6.target=void\ eliminarPersona()
comment6.text=\r\n\ Pide\ al\ usuario\ el\ nombre\ de\ la\ persona\ a\ eliminar\ y\ llama\ al\ m\u00E9todo\ eliminarPersona\ de\ la\ clase\ Lista\ para\ eliminarlo.\ \r\n\ Eval\u00FAa\ si\ la\ persona\ se\ encuentra\ registrada\ en\ la\ lista.\r\n
comment7.params=
comment7.target=void\ mostrarListaAmigos()
comment7.text=\r\n\ Muestra\ la\ lista\ de\ personas\ con\ sus\ amigos\r\n
comment8.params=
comment8.target=void\ mostrarCumpleanosCercano()
comment8.text=\r\n\ Pide\ el\ nombre\ de\ la\ persona\ a\ buscar\ en\ su\ \u00E1rbol\ de\ amigos,\ el\ que\ tenga\ el\ cumplea\u00F1os\ m\u00E1s\ cercano\ al\ suyo.\ \r\n\ Eval\u00FAa\ si\ la\ persona\ se\ encuentra\ ingresada\ y\ si\ la\ persona\ tiene\ amigos.\r\n
comment9.params=
comment9.target=java.io.File\ abrirArchivo()
comment9.text=\r\n\ Pide\ al\ usuario\ seleccionar\ un\ archivo\ en\ su\ base\ de\ datos\ para\ abrirlo.\r\n
numComments=13
